/*
 * This code was auto-generated by generator-mssql-types.
 * See https://github.com/jweyrich/generator-mssql-types for more information.
 * WARNING: If you change anything in this file it may be automatically overwriten!
 */

import { Datasource, IProcedureResult, Procedure, SqlTypes } from '@internal/mssql-connector';

export class Repository {
    readonly _repository: Datasource;

    constructor(dbUrl: string) {
        this._repository = new Datasource(dbUrl);
    }

    public async execute(<% if (!data.procedure.parameters.isEmptyType) { %>params: Params<% } %>): Promise<IProcedureResult<Result>> {
        const procedure = new Procedure<Result>('<%= data.procedure.name %>');
<%_ for (attr of data.procedure.parameters.attributes) { -%>
    <%_ if (attr.optional) { -%>
        if (params.<%= attr.name %>) {
            procedure.addParameter('<%= attr.name %>', params.<%= attr.name %>, SqlTypes.<%= attr.type.sqlType %>);
        }
    <%_ } else { -%>
        procedure.addParameter('<%= attr.name %>', params.<%= attr.name %>, SqlTypes.<%= attr.type.sqlType %>);
    <%_ } -%>
<%_ } -%>
        return await this._repository.execProcedure(procedure);
    }
}

<%_ if (data.procedure.parameters.isEmptyType) { -%>
<%_ } else if (data.procedure.parameters.isPlainType) { -%>
export type Params = <%= data.procedure.parameters.attributes[0].type.nativeType %>; /* <%= attr.type.commentSqlType %> */
<%_ } else { -%>
/*
 * All attributes below are optional because MSSQL does not give us the correct information.
 * We'd need to write a custom T-SQL parser to get this piece of information.
 */
export type Params = {
    <%_ for (attr of data.procedure.parameters.attributes) { -%>
    <%= attr.name %><%= attr.optional ? '?' : '' %>: <%= attr.type.nativeType %>; /* <%= attr.type.commentSqlType %> */
    <%_ } -%>
}
<%_ } -%>

<%_ if (data.procedure.result.errorMessage) { -%>
export type Result = {
    /* <%= data.procedure.result.errorMessage %> */
}
<%_ } else if (data.procedure.result.isEmptyType) { -%>
export type Result = void;
<%_ } else if (data.procedure.result.isPlainType) { -%>
export type Result = <%= data.procedure.result.attributes[0].type.nativeType %>; /* <%= attr.type.commentSqlType %> */
<%_ } else { -%>
export type Result = {
<%_ for (attr of data.procedure.result.attributes) { -%>
    <%= attr.name %><%= attr.optional ? '?' : '' %>: <%= attr.type.nativeType %>; /* <%= attr.type.commentSqlType %> */
<%_ } -%>
}
<%_ } -%>